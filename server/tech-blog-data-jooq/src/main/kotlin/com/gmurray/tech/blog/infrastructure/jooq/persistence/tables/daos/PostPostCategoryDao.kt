/*
 * This file is generated by jOOQ.
 */
package com.gmurray.tech.blog.infrastructure.jooq.persistence.tables.daos


import com.gmurray.tech.blog.infrastructure.jooq.persistence.tables.PostPostCategory
import com.gmurray.tech.blog.infrastructure.jooq.persistence.tables.records.PostPostCategoryRecord

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.Record2
import org.jooq.impl.DAOImpl
import org.springframework.stereotype.Repository


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
@Repository
open class PostPostCategoryDao(configuration: Configuration?) : DAOImpl<PostPostCategoryRecord, com.gmurray.tech.blog.infrastructure.jooq.persistence.tables.pojos.PostPostCategory, Record2<Long?, Long?>>(PostPostCategory.POST_POST_CATEGORY, com.gmurray.tech.blog.infrastructure.jooq.persistence.tables.pojos.PostPostCategory::class.java, configuration) {

    /**
     * Create a new PostPostCategoryDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: com.gmurray.tech.blog.infrastructure.jooq.persistence.tables.pojos.PostPostCategory): Record2<Long?, Long?> = compositeKeyRecord(o.postId, o.categoryId)

    /**
     * Fetch records that have <code>post_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfPostId(lowerInclusive: Long?, upperInclusive: Long?): List<com.gmurray.tech.blog.infrastructure.jooq.persistence.tables.pojos.PostPostCategory> = fetchRange(PostPostCategory.POST_POST_CATEGORY.POST_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>post_id IN (values)</code>
     */
    fun fetchByPostId(vararg values: Long): List<com.gmurray.tech.blog.infrastructure.jooq.persistence.tables.pojos.PostPostCategory> = fetch(PostPostCategory.POST_POST_CATEGORY.POST_ID, *values.toTypedArray())

    /**
     * Fetch records that have <code>category_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfCategoryId(lowerInclusive: Long?, upperInclusive: Long?): List<com.gmurray.tech.blog.infrastructure.jooq.persistence.tables.pojos.PostPostCategory> = fetchRange(PostPostCategory.POST_POST_CATEGORY.CATEGORY_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>category_id IN (values)</code>
     */
    fun fetchByCategoryId(vararg values: Long): List<com.gmurray.tech.blog.infrastructure.jooq.persistence.tables.pojos.PostPostCategory> = fetch(PostPostCategory.POST_POST_CATEGORY.CATEGORY_ID, *values.toTypedArray())
}
